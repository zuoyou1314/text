//
//  MZSetViewController.m
//  MZTuShenMa
//
//  Created by zuo on 15/8/30.
//  Copyright (c) 2015年 killer. All rights reserved.
//

#import "MZSetViewController.h"
#import "MZBlacklistViewController.h"

#define kCachesDirectory [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES)objectAtIndex:0]
//计算Caches路径下的缓存大小
#define kSizeAtPath [self folderSizeAtPath:kCachesDirectory]

@interface MZSetViewController ()<UITableViewDelegate,UITableViewDataSource>
{
    NSIndexPath *_firstIndexPath;
    UITableView *_tableView;
    UIAlertView * _alert;
}
@property (weak, nonatomic) IBOutlet UIButton *exitButton;

@end

@implementation MZSetViewController

- (instancetype)init
{
    if (self = [super init])
    {
        self.view = [[[NSBundle mainBundle] loadNibNamed:@"MZSetViewController" owner:self options:nil] lastObject];
        [self setUIDef];
    }
    return self;
}

- (void)setUIDef
{
    self.title = @"设置";
    [self setNavigationDefaultLeftBarButton];
    
    
    _exitButton.layer.borderColor = [[UIColor colorWithRed:79.0f/255.0f green:208.0f/255.0f blue:221.0f/255.0f alpha:1.0f]CGColor];
    _exitButton.layer.borderWidth= 1.0f;
    _exitButton.layer.cornerRadius = 25;
    _exitButton.layer.masksToBounds = YES;
    
    
    self.view.backgroundColor = [UIColor colorWithRed:243.0f/255.0f green:253.0f/255.0f blue:255.0f/255.0f alpha:1.0f];
    _tableView = [[UITableView alloc]initWithFrame:rect(0.0f, 64.0f, SCREEN_WIDTH,165.0f) style:UITableViewStylePlain];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    [self.view addSubview:_tableView];
    _tableView.scrollEnabled = NO;
    _tableView.tableFooterView = [[UIView alloc]init];
    //自定义header颜色
    [[UITableViewHeaderFooterView appearance] setTintColor:[UIColor colorWithRed:243.0f/255.0f green:253.0f/255.0f blue:255.0f/255.0f alpha:1.0f]];

    
}


- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.

  
    
}

//退出按钮的响应方法
- (IBAction)didClickExitButtonAction:(id)sender {
    NSLog(@"退出账户");
}


#pragma mark ----- UITableViewDelegate

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0) {
        return 1;
    }else if (section == 1){
        return 1;
    }else{
        return 1;
    }
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 45.0f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 10.0f;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
  
    NSArray *nameArray = @[@"登陆密码",@"我的黑名单",@"清理缓存"];
    NSArray *detailTextArray = @[@"更改",@"",[NSString stringWithFormat:@"%.2fMB",kSizeAtPath]];
    static NSString *identifier = @"cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifier];
    }
    cell.textLabel.text = nameArray[indexPath.section];
    cell.detailTextLabel.text = detailTextArray[indexPath.section];
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    //    cell.selectionStyle
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //    MZDynamicDetailViewController *dynamicDetailVC = [[MZDynamicDetailViewController alloc]init];
    //    [self.navigationController pushViewController:dynamicDetailVC animated:YES];
    if (indexPath.section == 0) {
        NSLog(@"更改登陆密码");
    }else if (indexPath.section == 1){
        NSLog(@"我的黑名单");
        MZBlacklistViewController *blacklistVC =[[MZBlacklistViewController alloc]init];
        [self.navigationController pushViewController:blacklistVC animated:YES];
    }else{
        NSLog(@"清理缓存");
        [self clearWithRowAtIndexPath:indexPath];
    }
    
}


- (void)clearWithRowAtIndexPath:(NSIndexPath *)indexPath{
    _firstIndexPath = indexPath;
    _alert=[[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"正在瘦身....." delegate:self cancelButtonTitle:nil otherButtonTitles:nil];
    [_alert show];
    dispatch_async(
                   dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)
                   , ^{
                       NSString *cachPath = [NSSearchPathForDirectoriesInDomains(NSCachesDirectory,NSUserDomainMask, YES) objectAtIndex:0];
                       NSArray *files = [[NSFileManager defaultManager] subpathsAtPath:cachPath];
                       for (NSString *p in files) {
                           NSError *error;
                           NSString *path = [cachPath stringByAppendingPathComponent:p];
                           if ([[NSFileManager defaultManager] fileExistsAtPath:path]) {
                               [[NSFileManager defaultManager] removeItemAtPath:path error:&error];
                           }
                       }
                       [self performSelectorOnMainThread:@selector(clearCacheSuccess) withObject:nil waitUntilDone:YES];});
}

-(void)clearCacheSuccess
{
    //    MDWSetTableViewCells *cell = (MDWSetTableViewCells *)[_tableView cellForRowAtIndexPath:_firstIndexPath];
    //    cell.numberLabel.text = [NSString stringWithFormat:@"(%.2fM)",kSizeAtPath];
    UITableViewCell *cell = [_tableView cellForRowAtIndexPath:_firstIndexPath];
    cell.detailTextLabel.text = [NSString stringWithFormat:@"(%.2fM)",kSizeAtPath];
    [_alert dismissWithClickedButtonIndex:0 animated:NO];
}

//计算某个路径下的缓存大小
- (float ) folderSizeAtPath:(NSString*)folderPath {
    NSFileManager* manager = [NSFileManager defaultManager];
    if (![manager fileExistsAtPath:folderPath]) return 0;
    NSEnumerator *childFilesEnumerator = [[manager subpathsAtPath:folderPath] objectEnumerator];
    NSString* fileName;
    long long folderSize = 0;
    while ((fileName = [childFilesEnumerator nextObject]) != nil){
        NSString* fileAbsolutePath = [folderPath stringByAppendingPathComponent:fileName];
        folderSize += [self fileSizeAtPath:fileAbsolutePath];
    }
    return folderSize/(1024.0*1024.0);
}

//计算某个文件的缓存大小
- (long long) fileSizeAtPath:(NSString*) filePath{
    NSFileManager* manager = [NSFileManager defaultManager];
    if ([manager fileExistsAtPath:filePath]){
        return [[manager attributesOfItemAtPath:filePath error:nil] fileSize];
    }
    return 0;
}



- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
